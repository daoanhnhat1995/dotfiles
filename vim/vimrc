" Unlink vi
set nocompatible

filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()


"Load vundle
Plugin 'VundleVim/Vundle.vim'

Plugin 'tpope/vim-fugitive'

Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

Plugin 'tpope/vim-surround'

Plugin 'ascenator/L9', {'name': 'newL9'}

" Automatically insert 'end' for ruby methods
Plugin 'tpope/vim-endwise'

" Comment
 Plugin 'tomtom/tcomment_vim'

" Utilities for common commands, adding or moving lines,
" encoding/decoding...
 Plugin 'tpope/vim-unimpaired'

" Utilities for Rails development
 Plugin 'tpope/vim-rails'

" Fuzzy file, buffer, mru and tag finder
Plugin 'kien/ctrlp.vim'

"Vim airline status line
Plugin 'bling/vim-airline'

 " Utilies for Rake projets
Plugin 'tpope/vim-rake'

Plugin 'scrooloose/nerdtree'

Plugin 'nono/vim-handlebars'

Bundle 'altercation/vim-colors-solarized'
Bundle 'davidhalter/jedi-vim'

call vundle#end()            

filetype plugin indent on 



" System settings

syntax on

syntax enable 
let g:solarized_termtrans = 1

set background=dark
colorscheme solarized

"Enable commandline complete
set wildmenu

set noeol

"Dont add empty new line
set binary

" Respect modeline in files
set modeline

set cursorline

" Make tabs as wide as two spaces
set tabstop=2

set noexpandtab

" Highlight searches
" set hlsearch
set modelines=4

" Ignore case of searches
set ignorecase
" Highlight dynamically as pattern is typed
set incsearch
" Always show status line
set laststatus=2
" Enable mouse in all modes
set mouse=a
" Disable error bells
set noerrorbells
" Don’t reset cursor to start of line when moving around.
set nostartofline
" Show the cursor position
set ruler
" Don’t show the intro message when starting Vim
set shortmess=atI
" Show the current mode
set showmode
" Show the filename in the window titlebar
set title
" Show the (partial) command as it’s being typed
set showcmd
set smartindent
set cursorline

" Use relative line numbers
if exists("&relativenumber")
	set relativenumber
	au BufReadPost * set relativenumber
endif
" Start scrolling three lines before the horizontal window border
set scrolloff=3

set clipboard=unnamed

"-----------------------"
" Key bindings "

nnoremap <c-p> :CtrlP<CR>


set syntax=html
set noswapfile
set backspace=2
set nowritebackup
set ruler
set showcmd
set laststatus=2
set autowrite

set noexpandtab
set copyindent
set preserveindent
set softtabstop=0
set shiftwidth=4
set tabstop=4

set wildmode=list:longest,list:full

function! InsertTabWrapper()
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
        return "\<tab>"
    else
        return "\<c-p>"
    endif
endfunction

